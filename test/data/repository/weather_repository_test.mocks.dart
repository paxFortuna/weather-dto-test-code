// Mocks generated by Mockito 5.3.0 from annotations
// in weather_dto_test_code/test/data/repository/weather_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_dto_test_code/data/data_source/open_weather_api.dart'
    as _i3;
import 'package:weather_dto_test_code/data/data_source/weather_dto.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherDto_0 extends _i1.SmartFake implements _i2.WeatherDto {
  _FakeWeatherDto_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [OpenWeatherApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenWeatherApi extends _i1.Mock implements _i3.OpenWeatherApi {
  MockOpenWeatherApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeatherDto> getWeatherInfo(String? query) =>
      (super.noSuchMethod(Invocation.method(#getWeatherInfo, [query]),
              returnValue: _i4.Future<_i2.WeatherDto>.value(_FakeWeatherDto_0(
                  this, Invocation.method(#getWeatherInfo, [query]))))
          as _i4.Future<_i2.WeatherDto>);
}
